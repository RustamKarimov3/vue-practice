{"version":3,"sources":["webpack:///./src/views/Request.vue","webpack:///./src/views/Request.vue?a27a"],"names":["class","value","loading","request","back","title","name","status","id","remove","isChanged","update","components","AppLoader","AppStatus","AppPage","setup","route","router","store","params","updateStatus","e","target","dispatch","v","console","log","push","render","__scopeId"],"mappings":"+NAGI,eAAe,UAAX,UAAM,G,GAGLA,MAAM,gB,EAEH,eAAkC,UAA1BC,MAAM,QAAO,QAAI,G,EACzB,eAA4C,UAApCA,MAAM,aAAY,aAAS,G,EACnC,eAAsC,UAA9BA,MAAM,UAAS,UAAM,G,EAC7B,eAAwC,UAAhCA,MAAM,WAAU,WAAO,G,SAMhCD,MAAM,0B,uHAhBC,EAAAE,S,iBAAlB,eAAwC,YACd,EAAAC,S,iBAA1B,eAcW,G,MAdDC,KAAA,GAA0BC,MAAO,EAAAF,QAAQG,M,YAC/C,iBAAe,CAAf,E,eAAe,IACf,eAAG,EAAAH,SAAU,IACb,kBAAiC,YAA3B,WAAQ,eAAG,EAAAI,QAAM,GACvB,eAOM,MAPN,EAOM,C,eANF,eAKS,UALDC,GAAG,S,qDAAkB,EAAAD,OAAM,K,CAC/B,EACA,EACA,EACA,G,cAJyB,EAAAA,YAOjC,eAA2D,UAAnDP,MAAM,aAAc,QAAK,8BAAE,EAAAS,QAAA,EAAAA,OAAA,sBAAQ,WAC7B,EAAAC,W,iBAAd,eAA8E,U,MAArDV,MAAM,cAAe,QAAK,8BAAE,EAAAW,QAAA,EAAAA,OAAA,sBAAQ,a,+DAEjE,eAAoD,KAApD,EAA0C,a,oFAYvB,GACXC,WAAY,CAACC,YAAA,KAAWC,YAAA,KAAWC,UAAA,MACnCC,MAFW,WAGP,IAAMC,EAAQ,iBACRC,EAAS,iBACTC,EAAQ,iBACRjB,EAAU,iBACVC,EAAU,iBACVI,EAAS,iBAETC,EAAKS,EAAMG,OAAOZ,GAElBa,EAAe,SAACC,GAClBf,EAAON,MAAQqB,EAAEC,OAAOtB,OAG5B,eAAS,wCAAC,qGACNC,EAAQD,OAAQ,EADV,SAEgBkB,EAAMK,SAAS,mBAAoBhB,GAFnD,OAENL,EAAQF,MAFF,OAGNM,EAAON,MAAQE,EAAQF,MAAMM,OAC7BL,EAAQD,OAAQ,EAJV,4CAOV,eAAME,GAAS,SAACsB,GACZC,QAAQC,IAAIF,MAGhB,IAAMhB,EAAK,yDAAI,8GACLU,EAAMK,SAAS,iBAAkBhB,GAD5B,OAGXU,EAAOU,KAAK,KAHD,2CAAJ,qDAKLjB,EAAK,yDAAI,8GACLQ,EAAMK,SAAS,iBAAkB,CAAChB,KAAKL,QAAS,CAACI,OAAQA,EAAON,SAD3D,OAGXE,EAAQF,MAAMM,OAASA,EAAON,MAHnB,2CAAJ,qDAMLS,EAAY,gBAAS,kBAAMP,EAAQF,MAAMM,SAAUA,EAAON,SAEhE,MAAO,CAACE,UAASI,SAAQL,UAAQQ,YAAWD,SAAQE,SAAQU,kBClExE,EAAOQ,OAASA,EAChB,EAAOC,UAAY,kBAEJ","file":"js/chunk-2d0a4783.e65d4d43.js","sourcesContent":["<template>\n<app-loader v-if=\"loading\"></app-loader>\n<app-page back v-else-if=\"request\" :title=\"request.name\">\n    <h1>Заявка</h1>\n    {{ request }}\n    <span>Status: {{ status }}</span>\n    <div class=\"form-control\">\n        <select id=\"status\" v-model=\"status\">\n            <option value=\"done\">done</option>\n            <option value=\"cancelled\">cancelled</option>\n            <option value=\"active\">active</option>\n            <option value=\"pending\">pending</option>\n        </select>\n    </div>\n    <button class=\"btn danger\" @click=\"remove\">Удалить</button>\n    <button v-if=\"isChanged\" class=\"btn primary\" @click=\"update\">Обновить</button>\n</app-page>\n<h3 v-else class=\"text-center text-white\">No so</h3>\n\n</template>\n\n<script>\nimport { computed, onMounted, ref, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport AppLoader from '../components/ui/AppLoader.vue';\nimport AppStatus from '../components/ui/AppStatus.vue';\nimport AppPage from '../components/ui/AppPage.vue';\n\n    export default {\n        components: {AppLoader, AppStatus, AppPage},\n        setup() {\n            const route = useRoute();\n            const router = useRouter();\n            const store = useStore();\n            const loading = ref();\n            const request = ref();\n            const status = ref();\n\n            const id = route.params.id;\n\n            const updateStatus = (e) => {\n                status.value = e.target.value\n            }\n\n            onMounted(async () => {\n                loading.value = true;\n                request.value = await store.dispatch('request/loadById', id)\n                status.value = request.value.status\n                loading.value = false;\n            })\n\n            watch(request, (v) => {\n                console.log(v)\n            })\n\n            const remove = async () => {\n                await store.dispatch('request/remove', id)\n\n                router.push('/')\n            }\n            const update = async () => {\n                await store.dispatch('request/update', {id,  request: {status: status.value}})\n\n                request.value.status = status.value\n            }\n\n            const isChanged = computed(() => request.value.status !==status.value)\n\n            return {request, status, loading,isChanged, remove, update, updateStatus}\n\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>","import { render } from \"./Request.vue?vue&type=template&id=21981024&scoped=true\"\nimport script from \"./Request.vue?vue&type=script&lang=js\"\nexport * from \"./Request.vue?vue&type=script&lang=js\"\nscript.render = render\nscript.__scopeId = \"data-v-21981024\"\n\nexport default script"],"sourceRoot":""}